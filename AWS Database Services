🗃️ AWS Database Services (Detailed Summary)
🔹 1. Amazon RDS (Relational Database Service)
Type: Managed relational database.
Supported Engines: MySQL, PostgreSQL, MariaDB, Oracle, SQL Server, Amazon Aurora.
Key Features: 
  Automatic backups, patching, replication (Multi-AZ), scaling.
  Aurora is AWS's high-performance engine compatible with MySQL and PostgreSQL.
  Multi-AZ for High Availability, Read Replicas for scaling read-heavy apps.
  You don’t manage the OS or database software — AWS does.

Use Cases: Traditional web apps, enterprise apps, ERP, CRM, etc.

🔹 2. Amazon DynamoDB
Type: Fully managed NoSQL database (key-value & document).
Key Features:
  Serverless, scales automatically.
  Single-digit millisecond performance at any scale.
  Built-in encryption at rest, backup/restore, streams, and TTL (time-to-live).
  Supports DAX (in-memory caching) for faster queries.
  Global Tables for multi-region, active-active replication.

Use Cases: IoT apps, gaming, mobile apps, shopping carts, etc.

🔹 3. Amazon Aurora
Type: High-performance relational database engine (part of RDS).
Compatible With: MySQL and PostgreSQL.
Key Features:
  Up to 5x faster than MySQL, 3x faster than PostgreSQL.
  Auto-scaling, replication, high availability.
  Aurora Serverless version for on-demand scaling and cost-saving.

Use Cases: High-performance OLTP apps, SaaS platforms.

🔹 4. Amazon Redshift
Type: Managed data warehouse (OLAP).
Key Features:
  Columnar storage, optimized for complex queries on big data.
  Integrates with S3, Kinesis, and EMR.
  Best for business intelligence (BI) and analytics.

Use Cases: Reporting, dashboards, analytics on petabyte-scale data.

🔹 5. Amazon ElastiCache
Type: In-memory caching service.
Supports: Redis and Memcached.
Key Features:
  Microsecond latency.
  Reduces database load by caching frequent queries.

Use Cases: Gaming leaderboards, session management, real-time data caching.

🔹 6. Amazon DocumentDB
Type: Managed document database, compatible with MongoDB.
Key Features:
  Scalable, highly available.
  JSON-like document structure.

Use Cases: Content management systems, catalogs, user profiles.

🔹 7. Amazon Neptune
Type: Graph database.
Supports: Property graph (Gremlin) and RDF (SPARQL).
Key Features:
  Ideal for managing relationships between data.
Use Cases: Social networking, fraud detection, knowledge graphs.

🔹 8. AWS Database Migration Service (DMS)
Purpose: Migrate databases to AWS (homogeneous or heterogeneous).
Supports: Live migrations with minimal downtime.
Use Cases: On-prem to cloud migration, cross-region replication.



🎯 Summary Tips (for AWS CCP)
RDS vs DynamoDB: Use RDS for structured relational data; DynamoDB for fast, scalable NoSQL.
Redshift = Analytics (OLAP), Aurora = High-speed transactional (OLTP).
Aurora Serverless is great when your workload is unpredictable or intermittent.
ElastiCache helps reduce load on your main database.

